{"version":3,"file":"static/js/7963.b1814d81.chunk.js","mappings":"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","sources":["pages/User/components/FormSection/Info.jsx","pages/User/components/FormSection/Status.jsx","pages/User/pages/AddPage.jsx","pages/User/pages/EditPage.jsx","services/branch.service.js","services/transaction-room.service.js","services/user.service.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport Accordion from 'components/shared/Accordion/index';\r\nimport FormItem from 'components/shared/FormControl/FormItem';\r\nimport FormInput from 'components/shared/FormControl/FormInput';\r\nimport styled from 'styled-components';\r\nimport { Input } from 'antd';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\nimport FormSelect from 'components/shared/FormControl/FormSelect';\r\nimport { getOptions as getTransactionRoomOptions } from 'services/transaction-room.service';\r\nimport { getOptions as getBranchOptoins } from 'services/branch.service';\r\n\r\nconst CustomInput = styled.div`\r\n  .ant-input-password {\r\n    border: none !important;\r\n    border-color: transparent !important;\r\n    box-shadow: none !important;\r\n    padding: 4px 0;\r\n  }\r\n`;\r\n\r\nconst UserInfo = ({ disabled, title, id, is_add }) => {\r\n  const methods = useFormContext();\r\n  const [branchOptions, setBranchOptions] = useState([]);\r\n  const [transactionRoomOptions, setTransactionRoomOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getBranchOptoins().then(setBranchOptions);\r\n    getTransactionRoomOptions().then(setTransactionRoomOptions);\r\n  }, []);\r\n\r\n  return (\r\n    <Accordion title={title} id={id}>\r\n      <div className='cb_row'>\r\n        <div className='cb_col_6'>\r\n          <FormItem label='Mã nhân viên' isRequired disabled={disabled || !is_add}>\r\n            <FormInput\r\n              type='text'\r\n              field='username'\r\n              placeholder='Nhập mã nhân viên'\r\n              validation={{\r\n                required: 'Mã nhân viên là bắt buộc',\r\n                min: { value: 5, message: 'Tên đăng nhập ít nhất 5 ký tự' },\r\n              }}\r\n            />\r\n          </FormItem>\r\n        </div>\r\n        <div className='cb_col_6'>\r\n          <FormItem disabled={disabled || !is_add} label='Mật khẩu' isRequired>\r\n            <CustomInput>\r\n              <Input.Password\r\n                disabled={disabled || !is_add}\r\n                placeholder='*************'\r\n                field='password'\r\n                autoComplete={false}\r\n                minLength={5}\r\n                value={methods.watch('password') ?? ''}\r\n                iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                onChange={(e) => {\r\n                  methods.setValue('password', e.target.value);\r\n                }}\r\n              />\r\n            </CustomInput>\r\n          </FormItem>\r\n        </div>\r\n        <div className='cb_col_6'>\r\n          <FormItem label='Tên nhân viên' isRequired disabled={disabled}>\r\n            <FormInput\r\n              type='text'\r\n              field='full_name'\r\n              placeholder='Nhập tên nhân viên'\r\n              validation={{\r\n                required: 'Tên nhân viên là bắt buộc',\r\n              }}\r\n            />\r\n          </FormItem>\r\n        </div>\r\n\r\n        <div className='cb_col_6'>\r\n          <FormItem label='Số điện thoại' disabled={disabled}>\r\n            <FormInput type='text' field='phone_number' placeholder='Nhập Số điện thoại' />\r\n          </FormItem>\r\n        </div>\r\n\r\n        <div className='cb_col_6'>\r\n          <FormItem label='Địa chỉ email' disabled={disabled}>\r\n            <FormInput type='text' field='email' placeholder='Nhập địa chỉ email' />\r\n          </FormItem>\r\n        </div>\r\n\r\n        <div className='cb_col_6'>\r\n          <FormItem label='Chi nhánh' isRequired disabled={disabled}>\r\n            <FormSelect\r\n              allowClear\r\n              disabled={disabled}\r\n              field='branch_id'\r\n              placeholder='Chọn chi nhánh'\r\n              list={branchOptions}\r\n              validation={{\r\n                required: 'Chi nhánh là bắt buộc',\r\n              }}\r\n            />\r\n          </FormItem>\r\n        </div>\r\n\r\n        <div className='cb_col_6'>\r\n          <FormItem label='Phòng giao dịch' disabled={disabled}>\r\n            <FormSelect\r\n              allowClear\r\n              disabled={disabled}\r\n              field='transaction_room_id'\r\n              placeholder='Chọn Phòng giao dịch'\r\n              list={transactionRoomOptions}\r\n            />\r\n          </FormItem>\r\n        </div>\r\n      </div>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React from 'react';\r\n\r\nimport Accordion from 'components/shared/Accordion/index';\r\nimport FormInput from 'components/shared/FormControl/FormInput';\r\n\r\nconst Status = ({ disabled }) => {\r\n  return (\r\n    <Accordion title='Trạng thái' id='cb_mores' isRequired={false}>\r\n      <div className='cb_row'>\r\n        <div className='cb_col_12'>\r\n          <div className='cb_frm_box'>\r\n            <div className='cb_flex cb_align_items_center cb_lb_sex'>\r\n              <label className='cb_checkbox'>\r\n                <FormInput type='checkbox' field='is_active' disabled={disabled} />\r\n                <span />\r\n                Kích hoạt\r\n              </label>\r\n              <label className='cb_checkbox'>\r\n                <FormInput type='checkbox' field='is_admin' disabled={disabled} />\r\n                <span />\r\n                Quản trị viên\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n","import React, { useCallback, useEffect, useMemo } from 'react';\r\nimport FormSection from 'components/shared/FormSection/index';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\n\r\nimport { create, update, getById } from 'services/user.service';\r\nimport UserInfo from '../components/FormSection/Info';\r\nimport { showToast } from 'utils/helpers';\r\nimport Status from '../components/FormSection/Status';\r\n\r\nconst AddPage = () => {\r\n  const methods = useForm();\r\n\r\n  const { pathname } = useLocation();\r\n  const { id: user_id } = useParams();\r\n  const disabled = useMemo(() => pathname.includes('/detail'), [pathname]);\r\n\r\n  const onSubmit = async (payload) => {\r\n    try {\r\n      let label;\r\n      if (user_id) {\r\n        await update(payload);\r\n        label = 'Chỉnh sửa';\r\n      } else {\r\n        await create(payload);\r\n        label = 'Thêm mới';\r\n        methods.reset({\r\n          is_active: true,\r\n        });\r\n      }\r\n      showToast.success(`${label} thành công !`);\r\n    } catch (error) {\r\n      showToast.error(error.message?.constructor === Array ? error.message[0] : error.message || 'Có lỗi xảy ra!');\r\n    }\r\n  };\r\n\r\n  const loadDetail = useCallback(() => {\r\n    if (user_id) {\r\n      getById(user_id).then((value) => {\r\n        methods.reset(value);\r\n      });\r\n    } else {\r\n      methods.reset({\r\n        is_active: true,\r\n      });\r\n    }\r\n  }, [user_id, methods]);\r\n\r\n  const detailForm = [\r\n    {\r\n      title: 'Thông tin nhân viên',\r\n      id: 'user_id',\r\n      component: UserInfo,\r\n      fieldActive: ['username', 'full_name'],\r\n      is_add: !user_id,\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      id: 'status',\r\n      component: Status,\r\n      fieldActive: null,\r\n    },\r\n  ];\r\n\r\n  useEffect(loadDetail, [loadDetail]);\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <FormSection detailForm={detailForm} onSubmit={onSubmit} disabled={disabled} />\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default AddPage;\r\n","import React from 'react';\r\n\r\nimport AddPage from './AddPage';\r\n\r\nconst EditPage = () => {\r\n  return <AddPage />;\r\n};\r\n\r\nexport default EditPage;\r\n","import httpClient from 'utils/httpClient';\r\n\r\nconst path = '/branch';\r\n\r\nexport const getList = (params = {}) => {\r\n  return httpClient.get(path, { params });\r\n};\r\n\r\nexport const getById = (id) => {\r\n  return httpClient.get(`${path}/${id}`);\r\n};\r\nexport const create = (params) => {\r\n  return httpClient.post(path, params);\r\n};\r\n\r\nexport const update = (params) => {\r\n  return httpClient.patch(path, params);\r\n};\r\n\r\nexport const deleteBranch = (id) => {\r\n  return httpClient.delete(`${path}/${id}`);\r\n};\r\n\r\nexport const getOptions = (params = {}) => {\r\n  return httpClient.get(path + '/options', { params });\r\n};\r\n","import httpClient from 'utils/httpClient';\r\n\r\nconst path = '/transaction-room';\r\n\r\nexport const getList = (params = {}) => {\r\n  return httpClient.get(path, { params });\r\n};\r\n\r\nexport const getById = (id) => {\r\n  return httpClient.get(`${path}/${id}`);\r\n};\r\nexport const create = (params) => {\r\n  return httpClient.post(path, params);\r\n};\r\n\r\nexport const update = (params) => {\r\n  return httpClient.patch(path, params);\r\n};\r\n\r\nexport const deleteBranch = (id) => {\r\n  return httpClient.delete(`${path}/${id}`);\r\n};\r\n\r\nexport const getOptions = (params = {}) => {\r\n  return httpClient.get(path + '/options', { params });\r\n};\r\n","import httpClient from 'utils/httpClient';\r\n\r\nconst path = '/user';\r\n\r\nexport const getList = (params = {}) => {\r\n  return httpClient.get(path, { params });\r\n};\r\n\r\nexport const getById = (id) => {\r\n  return httpClient.get(`${path}/${id}`);\r\n};\r\nexport const create = (params) => {\r\n  return httpClient.post('auth/signup', params);\r\n};\r\n\r\nexport const update = (params) => {\r\n  return httpClient.patch(path, params);\r\n};\r\n\r\nexport const lockUser = (id) => {\r\n  return httpClient.delete(`${path}/${id}`);\r\n};\r\n\r\nexport const getOptions = (params = {}) => {\r\n  return httpClient.get(path + '/options', { params });\r\n};\r\n\r\nexport const changePassword = (params) => {\r\n  return httpClient.patch(path + `/change-password`, params);\r\n};\r\n"],"names":["CustomInput","styled","div","_templateObject","_taggedTemplateLiteral","_ref","_methods$watch","disabled","title","id","is_add","methods","useFormContext","_useState","useState","_useState2","_slicedToArray","branchOptions","setBranchOptions","_useState3","_useState4","transactionRoomOptions","setTransactionRoomOptions","useEffect","getBranchOptoins","then","getTransactionRoomOptions","_jsx","Accordion","children","_jsxs","className","FormItem","label","isRequired","FormInput","type","field","placeholder","validation","required","min","value","message","Input","Password","autoComplete","minLength","watch","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","onChange","e","setValue","target","FormSelect","allowClear","list","useForm","pathname","useLocation","user_id","useParams","useMemo","includes","loadDetail","useCallback","getById","reset","is_active","detailForm","component","UserInfo","fieldActive","Status","FormProvider","_objectSpread","FormSection","onSubmit","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","payload","_error$message","wrap","_context","prev","next","update","create","showToast","success","concat","t0","error","constructor","Array","stop","apply","arguments","AddPage","path","getList","params","length","undefined","httpClient","get","post","patch","deleteBranch","delete","getOptions","lockUser","changePassword"],"sourceRoot":""}
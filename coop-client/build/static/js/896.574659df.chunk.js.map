{"version":3,"file":"static/js/896.574659df.chunk.js","mappings":"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","sources":["components/shared/FormControl/FormInput.js","components/shared/FormControl/FormRadioGroup.js","pages/BankRepresentative/components/FormSection/Info.jsx","pages/BankRepresentative/pages/AddPage.jsx","services/bank-representative.service.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport ErrorMessage from './ErrorMessage';\r\n\r\nconst FormInput = ({ field, validation, type = 'text', placeholder, className, disabled, ...props }) => {\r\n  const methods = useFormContext();\r\n  const { error } = methods.getFieldState(field, methods.formState);\r\n  React.useEffect(() => {\r\n    methods.register(field, validation);\r\n  }, [methods, field, validation]);\r\n\r\n  const handleChange = (e) => {\r\n    methods.clearErrors(field);\r\n    methods.setValue(\r\n      field,\r\n      type === 'checkbox' || type === 'radio' ? (e.target.checked ? true : false) : e.target.value || null,\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <input\r\n        type={type}\r\n        placeholder={placeholder}\r\n        className={className}\r\n        disabled={disabled}\r\n        value={methods.watch(field) ?? ''}\r\n        checked={(type === 'checkbox' || type == 'radio') && Boolean(methods.watch(field))}\r\n        onChange={handleChange}\r\n        style={{ lineHeight: 1 }}\r\n        {...props}\r\n      />\r\n      {error && <ErrorMessage message={error?.message} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nFormInput.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  field: PropTypes.string,\r\n  validation: PropTypes.object,\r\n  placeholder: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  className: PropTypes.string,\r\n};\r\n\r\nFormInput.defaultProps = {\r\n  type: 'text',\r\n  className: '',\r\n};\r\n\r\nexport default FormInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport ErrorMessage from './ErrorMessage';\r\n\r\nconst FormRadioGroup = ({ field, validation, className, disabled = false, list, custom = false, style, onChange }) => {\r\n  const methods = useFormContext();\r\n  const { error } = methods.getFieldState(field, methods.formState);\r\n  React.useEffect(() => {\r\n    methods.register(field, validation);\r\n  }, [methods, field, validation]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className={\r\n          !custom ? 'cb_flex cb_align_items_center cb_lb_sex cb_sex_group ' : 'cb_flex cb_align_items_center cb_lb_sex'\r\n        }>\r\n        {(list || []).map((item, index) => {\r\n          return (\r\n            <React.Fragment key={index}>\r\n              <label className='cb_radio' style={style}>\r\n                <input\r\n                  type='radio'\r\n                  name={field}\r\n                  id={item.key}\r\n                  className={className}\r\n                  disabled={disabled}\r\n                  checked={methods.watch(field) == item.value}\r\n                  onChange={(e) => {\r\n                    methods.clearErrors(field);\r\n                    methods.setValue(field, item.value);\r\n                    if (typeof onChange === 'function') onChange(item.value);\r\n                  }}\r\n                />\r\n                <span />\r\n                {item.img ? (\r\n                  <img\r\n                    style={{\r\n                      width: '50px',\r\n                      height: '50px',\r\n                      borderRadius: '10px',\r\n                      marginRight: '3px',\r\n                      border: '1px solid rgba(0,0,0,0.08)',\r\n                    }}\r\n                    src={item.img}\r\n                    alt='logo'\r\n                  />\r\n                ) : null}\r\n                {item.label}\r\n              </label>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n        {error && <ErrorMessage message={error?.message} />}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nFormRadioGroup.propTypes = {\r\n  field: PropTypes.string,\r\n  validation: PropTypes.object,\r\n  content: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  checked: PropTypes.bool,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default FormRadioGroup;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport Accordion from 'components/shared/Accordion/index';\r\nimport FormItem from 'components/shared/FormControl/FormItem';\r\nimport FormInput from 'components/shared/FormControl/FormInput';\r\nimport { GENDER, PositionOptions } from 'pages/BankRepresentative/utils/constants';\r\nimport FormDatePicker from 'components/shared/FormControl/FormDate';\r\nimport FormRadioGroup from 'components/shared/FormControl/FormRadioGroup';\r\nimport FormSelect from 'components/shared/FormControl/FormSelect';\r\n\r\nconst BranchInfo = ({ disabled, title, id }) => {\r\n  return (\r\n    <Accordion title={title} id={id}>\r\n      <div className='cb_row'>\r\n        <div class='cb_col_6'>\r\n          <FormItem label='Họ và tên' isRequired disabled={disabled}>\r\n            <FormInput\r\n              type='text'\r\n              field='bank_representative_name'\r\n              placeholder='Nhập họ và tên'\r\n              validation={{\r\n                required: 'Tên là bắt buộc',\r\n              }}\r\n            />\r\n          </FormItem>\r\n        </div>\r\n\r\n        <div className='cb_col_6'>\r\n          <FormItem label='Giới tính' isRequired disabled={disabled}>\r\n            <FormRadioGroup\r\n              field={'gender'}\r\n              list={[\r\n                { value: GENDER.MALE, label: 'Nam' },\r\n                { value: GENDER.FEMALE, label: 'Nữ' },\r\n              ]}\r\n              disabled={disabled}\r\n              validation={{\r\n                require: 'Giới tính là bắt buộc',\r\n              }}\r\n            />\r\n          </FormItem>\r\n        </div>\r\n\r\n        <div className='cb_col_6'>\r\n          <FormItem label='Chức vụ' isRequired disabled={disabled}>\r\n            <FormSelect\r\n              allowClear\r\n              disabled={disabled}\r\n              field='bank_representative_position'\r\n              placeholder='Chọn chi nhánh'\r\n              list={PositionOptions}\r\n              validation={{\r\n                required: 'Chức vụ là bắt buộc',\r\n              }}\r\n            />\r\n          </FormItem>\r\n        </div>\r\n\r\n        <div class='cb_col_6'>\r\n          <FormItem label='Số điện thoại' isRequired disabled={disabled}>\r\n            <FormInput\r\n              type='text'\r\n              field='phone_number'\r\n              placeholder='Nhập Số điện thoại'\r\n              validation={{\r\n                required: 'Số điện thoại là bắt buộc',\r\n              }}\r\n            />\r\n          </FormItem>\r\n        </div>\r\n\r\n        <div class='cb_col_6'>\r\n          <FormItem label='Số CCCD' isRequired disabled={disabled}>\r\n            <FormInput\r\n              type='text'\r\n              field='id_number'\r\n              placeholder='Nhập số CCCD'\r\n              validation={{\r\n                required: 'Số CCCD là bắt buộc',\r\n              }}\r\n            />\r\n          </FormItem>\r\n        </div>\r\n\r\n        <div class='cb_col_6'>\r\n          <FormItem label='Cơ quan cấp CCCD' isRequired disabled={disabled}>\r\n            <FormInput\r\n              type='text'\r\n              field='id_issued_by'\r\n              placeholder='Nhập cơ quan cấp CCCD'\r\n              validation={{\r\n                required: 'Cơ quan cấp là bắt buộc',\r\n              }}\r\n            />\r\n          </FormItem>\r\n        </div>\r\n\r\n        <div class='cb_col_6'>\r\n          <FormItem label='Ngày cấp CCCD' isRequired disabled={disabled}>\r\n            <FormDatePicker\r\n              format={'DD/MM/YYYY'}\r\n              field='id_issued_date'\r\n              validation={{\r\n                required: 'Ngày cấp căn cước công dân là bắt buộc.',\r\n              }}\r\n              placeholder={'dd/mm/yyyy'}\r\n              style={{\r\n                width: '100%',\r\n              }}\r\n              bordered={false}\r\n              allowClear\r\n            />\r\n          </FormItem>\r\n        </div>\r\n\r\n        <div class='cb_col_6'>\r\n          <FormItem label='Địa chỉ email' disabled={disabled}>\r\n            <FormInput type='text' field='bank_representative_email' placeholder='Nhập địa chỉ email' />\r\n          </FormItem>\r\n        </div>\r\n\r\n        <div class='cb_col_6'>\r\n          <FormItem label='Ngày sinh' disabled={disabled}>\r\n            <FormDatePicker\r\n              format={'DD/MM/YYYY'}\r\n              field='birth_date'\r\n              placeholder={'dd/mm/yyyy'}\r\n              style={{\r\n                width: '100%',\r\n              }}\r\n              bordered={false}\r\n              allowClear\r\n            />\r\n          </FormItem>\r\n        </div>\r\n\r\n        <div class='cb_col_6'>\r\n          <FormItem label='Địa chỉ' disabled={disabled}>\r\n            <FormInput type='text' field='address' placeholder='Nhập địa chỉ' />\r\n          </FormItem>\r\n        </div>\r\n      </div>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default BranchInfo;\r\n","import React, { useCallback, useEffect, useMemo } from 'react';\r\nimport FormSection from 'components/shared/FormSection/index';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\n\r\nimport { create, update, getById } from 'services/bank-representative.service';\r\nimport Infomation from '../components/FormSection/Info';\r\nimport { showToast } from 'utils/helpers';\r\n\r\nconst AddPage = () => {\r\n  const methods = useForm();\r\n\r\n  const { pathname } = useLocation();\r\n  const { id: bank_representative_id } = useParams();\r\n  const disabled = useMemo(() => pathname.includes('/detail'), [pathname]);\r\n\r\n  const onSubmit = async (payload) => {\r\n    try {\r\n      let label;\r\n      if (bank_representative_id) {\r\n        await update(payload);\r\n        label = 'Chỉnh sửa';\r\n      } else {\r\n        await create(payload);\r\n        label = 'Thêm mới';\r\n        methods.reset({\r\n          is_active: 1,\r\n          is_system: 0,\r\n        });\r\n      }\r\n      showToast.success(`${label} thành công !`);\r\n    } catch (error) {\r\n      showToast.error(error.message?.constructor === Array ? error.message[0] : error.message || 'Có lỗi xảy ra!');\r\n    }\r\n  };\r\n\r\n  const loadDetail = useCallback(() => {\r\n    if (bank_representative_id) {\r\n      getById(bank_representative_id).then((value) => {\r\n        methods.reset(value);\r\n      });\r\n    } else {\r\n      methods.reset({\r\n        is_active: 1,\r\n        is_system: 0,\r\n      });\r\n    }\r\n  }, [bank_representative_id, methods]);\r\n\r\n  const detailForm = [\r\n    {\r\n      title: 'Thông tin đại diện',\r\n      id: 'bank-representative-info',\r\n      component: Infomation,\r\n      fieldActive: ['bank_representative_name', 'phone_number', 'bank_representative_position', 'id_number'],\r\n    },\r\n  ];\r\n\r\n  useEffect(loadDetail, [loadDetail]);\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <FormSection detailForm={detailForm} onSubmit={onSubmit} disabled={disabled} />\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default AddPage;\r\n","import httpClient from 'utils/httpClient';\r\n\r\nconst path = '/bank-representative';\r\n\r\nexport const getList = (params = {}) => {\r\n  return httpClient.get(path, { params });\r\n};\r\n\r\nexport const getById = (id) => {\r\n  return httpClient.get(`${path}/${id}`);\r\n};\r\nexport const create = (params) => {\r\n  return httpClient.post(path, params);\r\n};\r\n\r\nexport const update = (params) => {\r\n  return httpClient.patch(path, params);\r\n};\r\n\r\nexport const deleteBankRepresentative = (id) => {\r\n  return httpClient.delete(`${path}/${id}`);\r\n};\r\n\r\nexport const getOptions = (params = {}) => {\r\n  return httpClient.get(path + '/options', { params });\r\n};\r\n"],"names":["FormInput","_ref","_methods$watch","field","validation","_ref$type","type","placeholder","className","disabled","props","_objectWithoutProperties","_excluded","methods","useFormContext","error","getFieldState","formState","React","register","_jsxs","children","_jsx","_objectSpread","value","watch","checked","Boolean","onChange","e","clearErrors","setValue","target","style","lineHeight","ErrorMessage","message","defaultProps","_ref$disabled","list","_ref$custom","custom","map","item","index","name","id","key","img","width","height","borderRadius","marginRight","border","src","alt","label","title","Accordion","class","FormItem","isRequired","required","FormRadioGroup","GENDER","MALE","FEMALE","require","FormSelect","allowClear","PositionOptions","FormDatePicker","format","bordered","useForm","pathname","useLocation","bank_representative_id","useParams","useMemo","includes","loadDetail","useCallback","getById","then","reset","is_active","is_system","detailForm","component","Infomation","fieldActive","useEffect","FormProvider","FormSection","onSubmit","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","payload","_error$message","wrap","_context","prev","next","update","create","showToast","success","concat","t0","constructor","Array","stop","apply","arguments","path","getList","params","length","undefined","httpClient","get","post","patch","deleteBankRepresentative","delete"],"sourceRoot":""}
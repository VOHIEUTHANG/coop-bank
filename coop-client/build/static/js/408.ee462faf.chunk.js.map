{"version":3,"file":"static/js/408.ee462faf.chunk.js","mappings":"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","sources":["pages/Representative/components/Filter.jsx","pages/Representative/components/Table.jsx","pages/Representative/pages/DefaultPage.jsx","services/representative.service.js"],"sourcesContent":["import React from 'react';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\n\r\nimport FilterSearchBar from 'components/shared/FilterSearchBar/index';\r\nimport FormInput from 'components/shared/FormControl/FormInput';\r\nimport FormDateRange from 'components/shared/FormControl/FormDateRange';\r\nimport { DefaultFilter } from '../utils/constants';\r\n\r\nconst BankRepresentativeFilter = ({ onChange }) => {\r\n  const methods = useForm(DefaultFilter);\r\n\r\n  const onClear = () => {\r\n    methods.reset(DefaultFilter);\r\n    onChange(DefaultFilter);\r\n  };\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <FilterSearchBar\r\n        title='Tìm kiếm'\r\n        onSubmit={(v) => {\r\n          v.search = v.search?.trim();\r\n          onChange(v);\r\n        }}\r\n        colSize={4}\r\n        onClear={() => onClear()}\r\n        actions={[\r\n          {\r\n            title: 'Từ khóa',\r\n            component: (\r\n              <FormInput field='search' placeholder='Nhập tên, số điện thoại, số căn cước công dân' maxLength={250} />\r\n            ),\r\n          },\r\n          {\r\n            title: 'Ngày tạo',\r\n            component: (\r\n              <FormDateRange\r\n                allowClear={true}\r\n                fieldStart={'created_date_from'}\r\n                fieldEnd={'created_date_to'}\r\n                placeholder={['Từ ngày', 'Đến ngày']}\r\n                format={'DD/MM/YYYY'}\r\n              />\r\n            ),\r\n          },\r\n          // {\r\n          //   title: 'Trạng thái',\r\n          //   component: <FormSelect field='is_active' list={statusTypesOption} />,\r\n          // },\r\n        ]}\r\n      />\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default BankRepresentativeFilter;\r\n","import React, { useCallback } from 'react';\r\nimport { useMemo } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { showConfirmModal } from 'actions/global';\r\nimport { deleteRepresentative } from 'services/representative.service';\r\nimport DataTable from 'components/shared/DataTable/index';\r\nimport { Permissoin, PositionOptions } from '../utils/constants';\r\n\r\nconst RepresentativeTable = ({\r\n  loading,\r\n  data,\r\n  totalPages,\r\n  itemsPerPage,\r\n  page,\r\n  totalItems,\r\n  onChangePage,\r\n  onRefresh,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        header: 'STT',\r\n        classNameHeader: 'cb_text_center',\r\n        classNameBody: 'cb_text_center',\r\n        formatter: (_, index) => <span className='cb_text_wrap'>{index + 1}</span>,\r\n      },\r\n      {\r\n        header: 'Tên người đại diện',\r\n        classNameHeader: 'cb_text_center',\r\n        accessor: 'representative_name',\r\n      },\r\n      {\r\n        header: 'Số điện thoại',\r\n        classNameHeader: 'cb_text_center',\r\n        accessor: 'phone_number',\r\n      },\r\n      {\r\n        header: 'Chức vụ',\r\n        classNameHeader: 'cb_text_center',\r\n        formatter: (item, index) => (\r\n          <span>\r\n            {PositionOptions.find((position) => position.value === item.representative_position)?.label ||\r\n              'Không xác định'}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        header: 'Số tài khoản ngân hàng',\r\n        classNameHeader: 'cb_text_center',\r\n        accessor: 'bank_number',\r\n      },\r\n      {\r\n        header: 'Tên ngân hàng',\r\n        classNameHeader: 'cb_text_center',\r\n        accessor: 'bank_name',\r\n      },\r\n      {\r\n        header: 'Căn cước công dân',\r\n        classNameHeader: 'cb_text_center',\r\n        accessor: 'id_number',\r\n      },\r\n      {\r\n        header: 'Ngày cấp',\r\n        classNameHeader: 'cb_text_center',\r\n        accessor: 'id_issued_date',\r\n      },\r\n      {\r\n        header: 'Ngày tạo',\r\n        accessor: 'created_at',\r\n        classNameHeader: 'cb_text_center',\r\n        classNameBody: 'cb_text_center',\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const handleDelete = useCallback(\r\n    async (branchId) => {\r\n      await deleteRepresentative(branchId);\r\n      onRefresh();\r\n    },\r\n    [onRefresh],\r\n  );\r\n\r\n  const actions = useMemo(() => {\r\n    return [\r\n      {\r\n        globalAction: true,\r\n        icon: 'ti-plus',\r\n        type: 'success',\r\n        content: 'Thêm mới',\r\n        onClick: () => window._$g.rdr(`representative/add`),\r\n      },\r\n      {\r\n        icon: 'ti-write',\r\n        color: 'blue',\r\n        title: 'Sửa',\r\n        onClick: (p) => {\r\n          window._$g.rdr(`representative/edit/${p?.representative_id}`);\r\n        },\r\n      },\r\n      {\r\n        icon: 'ti-eye',\r\n        color: 'green',\r\n        title: 'Chi tiết',\r\n        onClick: (p) => {\r\n          window._$g.rdr(`representative/detail/${p?.representative_id}`);\r\n        },\r\n      },\r\n      {\r\n        icon: 'fi ti-trash',\r\n        color: 'red',\r\n        title: 'Xóa',\r\n        onClick: (_, d) =>\r\n          dispatch(\r\n            showConfirmModal(['Bạn có thực sự muốn xóa?', 'Bạn sẽ mất dữ liệu này và các dữ liệu liên quan.'], () =>\r\n              handleDelete([_.representative_id]),\r\n            ),\r\n          ),\r\n      },\r\n    ];\r\n  }, [dispatch, handleDelete]);\r\n\r\n  return (\r\n    <DataTable\r\n      loading={loading}\r\n      columns={columns}\r\n      data={data}\r\n      actions={actions}\r\n      totalPages={totalPages}\r\n      itemsPerPage={itemsPerPage}\r\n      page={page}\r\n      totalItems={totalItems}\r\n      onChangePage={onChangePage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RepresentativeTable;\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useCallback } from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport Filter from '../components/Filter';\r\nimport Table from '../components/Table';\r\nimport { getList } from 'services/representative.service';\r\nimport { defaultPaging, defaultParams } from 'utils/helpers';\r\n\r\nconst ListPage = () => {\r\n  const [params, setParams] = useState(defaultParams);\r\n  const [dataList, setDataList] = useState(defaultPaging);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const { items, itemsPerPage, page, totalItems, totalPages } = dataList;\r\n\r\n  const getData = useCallback(() => {\r\n    setLoading(true);\r\n    getList(params)\r\n      .then(setDataList)\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [params]);\r\n\r\n  useEffect(getData, [getData]);\r\n\r\n  return (\r\n    <div class='cb_main_wrapp'>\r\n      <Filter\r\n        onChange={(e) => {\r\n          setParams((prev) => {\r\n            return {\r\n              ...prev,\r\n              ...e,\r\n            };\r\n          });\r\n        }}\r\n      />\r\n      <Table\r\n        onChangePage={(page) => {\r\n          setParams({\r\n            ...params,\r\n            page,\r\n          });\r\n        }}\r\n        data={items}\r\n        totalPages={totalPages}\r\n        itemsPerPage={itemsPerPage}\r\n        page={page}\r\n        totalItems={totalItems}\r\n        loading={loading}\r\n        onRefresh={getData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListPage;\r\n","import httpClient from 'utils/httpClient';\r\n\r\nconst path = '/representative';\r\n\r\nexport const getList = (params = {}) => {\r\n  return httpClient.get(path, { params });\r\n};\r\n\r\nexport const getById = (id) => {\r\n  return httpClient.get(`${path}/${id}`);\r\n};\r\nexport const create = (params) => {\r\n  return httpClient.post(path, params);\r\n};\r\n\r\nexport const update = (params) => {\r\n  return httpClient.patch(path, params);\r\n};\r\n\r\nexport const deleteRepresentative = (id) => {\r\n  return httpClient.delete(`${path}/${id}`);\r\n};\r\n"],"names":["_ref","onChange","methods","useForm","DefaultFilter","_jsx","FormProvider","_objectSpread","children","FilterSearchBar","title","onSubmit","v","_v$search","search","trim","colSize","onClear","reset","actions","component","FormInput","field","placeholder","maxLength","FormDateRange","allowClear","fieldStart","fieldEnd","format","_ref2","loading","data","totalPages","itemsPerPage","page","totalItems","onChangePage","onRefresh","dispatch","useDispatch","columns","useMemo","header","classNameHeader","classNameBody","formatter","_","index","className","accessor","item","_PositionOptions$find","PositionOptions","find","position","value","representative_position","label","handleDelete","useCallback","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","branchId","wrap","_context","prev","next","deleteRepresentative","stop","apply","arguments","globalAction","icon","type","content","onClick","window","_$g","rdr","color","p","concat","representative_id","d","showConfirmModal","DataTable","_useState","useState","defaultParams","_useState2","_slicedToArray","params","setParams","_useState3","defaultPaging","_useState4","dataList","setDataList","_useState5","_useState6","setLoading","items","getData","getList","then","finally","useEffect","_jsxs","class","Filter","e","Table","path","length","undefined","httpClient","get","getById","id","create","post","update","patch","delete"],"sourceRoot":""}
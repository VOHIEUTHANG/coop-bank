{"version":3,"file":"static/js/947.7a88e198.chunk.js","mappings":"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","sources":["components/shared/Accordion/index.js","components/shared/FormControl/FormDate.js","components/shared/FormControl/FormInput.js","components/shared/FormControl/FormNumber.js","components/shared/FormControl/FormRadioGroup.js","components/shared/FormControl/FormSelect.js","components/shared/FormControl/FormTextArea.js","components/shared/FormSection/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst IconCollapse = styled.span`\r\n  transform: ${(props) => (props.open ? 'rotate(180deg)' : '')};\r\n  color: ${(props) => (props.open ? '#333333' : '')};\r\n`;\r\n\r\nconst Accordion = ({ style, title, children, id, isRequired = false, componentCustom, defaultOpen = true }) => {\r\n  const [open, setOpen] = useState(defaultOpen);\r\n\r\n  const handleAccordion = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div id={id} className='cb_items_frm'>\r\n        <div className={`cb_collapse ${open ? 'cb_active' : ''}`}>\r\n          {!!title && (\r\n            <div className='cb_collapse_title' style={{ width: 'fit-content', gap: '5px' }}>\r\n              <IconCollapse open={open} className='ti-angle-down' onClick={handleAccordion} />\r\n              <h3>\r\n                {title}\r\n                {isRequired && <span className='cb_red'>*</span>}\r\n              </h3>\r\n            </div>\r\n          )}\r\n          {open && <div className='cb_collapse_panel'>{children}</div>}\r\n          {componentCustom && componentCustom}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nAccordion.propTypes = {\r\n  isRequired: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  id: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Accordion;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport { DatePicker } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport styled from 'styled-components';\r\n\r\nconst DatePickerStyle = styled(DatePicker)`\r\n  .ant-picker-input input {\r\n    color: black !important;\r\n  }\r\n`;\r\n\r\nconst FormDatePicker = ({\r\n  field,\r\n  validation,\r\n  placeholder,\r\n  disabled = false,\r\n  style,\r\n  format,\r\n  bordered,\r\n  allowClear,\r\n  ...props\r\n}) => {\r\n  // #region use-form\r\n  const methods = useFormContext();\r\n  const { error } = methods.getFieldState(field, methods.formState);\r\n\r\n  React.useEffect(() => {\r\n    methods.register(field, validation);\r\n  }, [methods, field, validation]);\r\n  // #endregion\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <DatePickerStyle\r\n        bordered={bordered}\r\n        allowClear={allowClear}\r\n        disabled={disabled}\r\n        placeholder={placeholder}\r\n        value={methods.watch(field) ? dayjs(methods.watch(field), format) : ''}\r\n        onChange={(e, date) => {\r\n          if (date) {\r\n            methods.clearErrors(field);\r\n            methods.setValue(field, date);\r\n          } else {\r\n            methods.setValue(field, null);\r\n          }\r\n        }}\r\n        format={format}\r\n        style={style}\r\n        {...props}\r\n      />\r\n      {error && <ErrorMessage message={error?.message} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nFormDatePicker.propTypes = {\r\n  field: PropTypes.string,\r\n  validation: PropTypes.object,\r\n  placeholder: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  format: PropTypes.string,\r\n  allowClear: PropTypes.bool,\r\n  bordered: PropTypes.bool,\r\n};\r\n\r\nexport default FormDatePicker;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport ErrorMessage from './ErrorMessage';\r\n\r\nconst FormInput = ({ field, validation, type = 'text', placeholder, className, disabled, ...props }) => {\r\n  const methods = useFormContext();\r\n  const { error } = methods.getFieldState(field, methods.formState);\r\n  React.useEffect(() => {\r\n    methods.register(field, validation);\r\n  }, [methods, field, validation]);\r\n\r\n  const handleChange = (e) => {\r\n    methods.clearErrors(field);\r\n    methods.setValue(\r\n      field,\r\n      type === 'checkbox' || type === 'radio' ? (e.target.checked ? true : false) : e.target.value || null,\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <input\r\n        type={type}\r\n        placeholder={placeholder}\r\n        className={className}\r\n        disabled={disabled}\r\n        value={methods.watch(field) ?? ''}\r\n        checked={(type === 'checkbox' || type == 'radio') && Boolean(methods.watch(field))}\r\n        onChange={handleChange}\r\n        style={{ lineHeight: 1 }}\r\n        {...props}\r\n      />\r\n      {error && <ErrorMessage message={error?.message} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nFormInput.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  field: PropTypes.string,\r\n  validation: PropTypes.object,\r\n  placeholder: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  className: PropTypes.string,\r\n};\r\n\r\nFormInput.defaultProps = {\r\n  type: 'text',\r\n  className: '',\r\n};\r\n\r\nexport default FormInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport { InputNumber } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst InputNumberStyled = styled(InputNumber)`\r\n  .ant-input-number-group-addon {\r\n    border: ${(props) => (props.bordered ? '' : 'none')};\r\n  }\r\n  .ant-input-number-input {\r\n    color: black !important;\r\n  }\r\n`;\r\n\r\nconst FormNumber = ({ field, validation, bordered = false, disabled, ...props }) => {\r\n  const methods = useFormContext();\r\n  const { error } = methods.getFieldState(field, methods.formState);\r\n  React.useEffect(() => {\r\n    methods.register(field, validation);\r\n  }, [methods, field, validation]);\r\n\r\n  const formatterNumber = (val) => {\r\n    if (!val) return '';\r\n    return `${val}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <InputNumberStyled\r\n        style={{\r\n          width: '100%',\r\n        }}\r\n        bordered={bordered}\r\n        disabled={disabled}\r\n        formatter={formatterNumber}\r\n        value={methods.watch(field)}\r\n        placeholder='0'\r\n        parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\r\n        onChange={(value) => {\r\n          methods.clearErrors(field);\r\n          methods.setValue(field, value);\r\n        }}\r\n        controls={false}\r\n        {...props}\r\n      />\r\n      {error && <ErrorMessage message={error?.message} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nFormNumber.propTypes = {\r\n  bordered: PropTypes.bool,\r\n  field: PropTypes.string,\r\n  validation: PropTypes.object,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default FormNumber;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport ErrorMessage from './ErrorMessage';\r\n\r\nconst FormRadioGroup = ({ field, validation, className, disabled = false, list, custom = false, style, onChange }) => {\r\n  const methods = useFormContext();\r\n  const { error } = methods.getFieldState(field, methods.formState);\r\n  React.useEffect(() => {\r\n    methods.register(field, validation);\r\n  }, [methods, field, validation]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className={\r\n          !custom ? 'cb_flex cb_align_items_center cb_lb_sex cb_sex_group ' : 'cb_flex cb_align_items_center cb_lb_sex'\r\n        }>\r\n        {(list || []).map((item, index) => {\r\n          return (\r\n            <React.Fragment key={index}>\r\n              <label className='cb_radio' style={style}>\r\n                <input\r\n                  type='radio'\r\n                  name={field}\r\n                  id={item.key}\r\n                  className={className}\r\n                  disabled={disabled}\r\n                  checked={methods.watch(field) == item.value}\r\n                  onChange={(e) => {\r\n                    methods.clearErrors(field);\r\n                    methods.setValue(field, item.value);\r\n                    if (typeof onChange === 'function') onChange(item.value);\r\n                  }}\r\n                />\r\n                <span />\r\n                {item.img ? (\r\n                  <img\r\n                    style={{\r\n                      width: '50px',\r\n                      height: '50px',\r\n                      borderRadius: '10px',\r\n                      marginRight: '3px',\r\n                      border: '1px solid rgba(0,0,0,0.08)',\r\n                    }}\r\n                    src={item.img}\r\n                    alt='logo'\r\n                  />\r\n                ) : null}\r\n                {item.label}\r\n              </label>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n        {error && <ErrorMessage message={error?.message} />}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nFormRadioGroup.propTypes = {\r\n  field: PropTypes.string,\r\n  validation: PropTypes.object,\r\n  content: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  checked: PropTypes.bool,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default FormRadioGroup;\r\n","import React from 'react';\r\nimport { Select } from 'antd';\r\nimport { CaretDownOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorMessage from './ErrorMessage';\r\n\r\nconst SelectStyle = styled(Select)`\r\n  display: flex;\r\n  .ant-select-selector {\r\n    font-size: 15px !important;\r\n    width: 100%;\r\n    padding: 0 !important;\r\n    margin: 1.8px 0;\r\n  }\r\n  .ant-select-arrow .anticon:not(.ant-select-suffix) {\r\n    pointer-events: none;\r\n  }\r\n  .ant-select-selection-search {\r\n    width: 100%;\r\n    inset-inline-start: 0 !important;\r\n    inset-inline-end: 0 !important;\r\n  }\r\n  .ant-select-selection-item {\r\n    padding: ${(props) => (props.bordered ? '0 7px!important' : undefined)};\r\n    color: black;\r\n  }\r\n  :where(.css-dev-only-do-not-override-1me4733).ant-select-multiple .ant-select-selection-item {\r\n    background: var(--mainColor);\r\n    color: var(--whiteColor);\r\n    font-size: 14px !important;\r\n    height: 26.5px;\r\n    padding-top: 1px;\r\n  }\r\n  :where(.css-dev-only-do-not-override-1me4733).ant-select-multiple .ant-select-selection-item-remove {\r\n    color: var(--whiteColor);\r\n    border-left: 1px solid;\r\n    padding-right: 3px;\r\n    padding-left: 7px;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst objectParse = (item) => {\r\n  return {\r\n    id: item,\r\n    value: item,\r\n  };\r\n};\r\n\r\nconst FormSelect = ({\r\n  list = [],\r\n  loading,\r\n  bordered = false,\r\n  placeholder = '--Chọn--',\r\n  className,\r\n  disabled = false,\r\n  field,\r\n  validation,\r\n  mode = null,\r\n  allowClear = false,\r\n  showSearch = true,\r\n  defaultValue,\r\n  ...props\r\n}) => {\r\n  const methods = useFormContext();\r\n  const { error } = methods.getFieldState(field, methods.formState);\r\n\r\n  React.useEffect(() => {\r\n    methods.register(field, validation);\r\n  }, [methods, field, validation]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SelectStyle\r\n        className={className}\r\n        mode={mode}\r\n        suffixIcon={loading ? <LoadingOutlined /> : <CaretDownOutlined />}\r\n        bordered={bordered}\r\n        showSearch={showSearch}\r\n        allowClear={allowClear}\r\n        placeholder={placeholder}\r\n        optionFilterProp='children'\r\n        disabled={disabled}\r\n        filterOption={(input, option) => (option?.label ?? '').toLowerCase().includes(input.toLowerCase())}\r\n        defaultValue={defaultValue}\r\n        value={methods.watch(field)}\r\n        options={list}\r\n        removeIcon={() => '×'}\r\n        onChange={(value) => {\r\n          console.log('🚀 ~ value:', value);\r\n          methods.clearErrors(field);\r\n          if (Array.isArray(value)) {\r\n            methods.setValue(field, value.map(objectParse));\r\n          } else {\r\n            methods.setValue(field, value);\r\n          }\r\n        }}\r\n        {...props}\r\n      />\r\n      {error && <ErrorMessage message={error?.message} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nFormSelect.propTypes = {\r\n  field: PropTypes.string,\r\n  className: PropTypes.string,\r\n  validation: PropTypes.object,\r\n  placeholder: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  loading: PropTypes.bool,\r\n  mode: PropTypes.string,\r\n};\r\n\r\nFormSelect.defaultValue = {\r\n  bordered: false,\r\n  loading: false,\r\n};\r\n\r\nexport default FormSelect;\r\n","import { useFormContext } from 'react-hook-form';\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorMessage from './ErrorMessage';\r\n\r\nconst FormTextArea = ({ field, validation, placeholder, disabled, className, style, rows }) => {\r\n  const methods = useFormContext();\r\n  const { error } = methods.getFieldState(field, methods.formState);\r\n\r\n  React.useEffect(() => {\r\n    methods.register(field, validation);\r\n  }, [methods, field, validation]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <textarea\r\n        style={style}\r\n        rows={rows}\r\n        className={classNames(className ?? 'form-control', { 'is-invalid': error })}\r\n        disabled={disabled}\r\n        placeholder={placeholder}\r\n        value={methods.watch(field) ?? ''}\r\n        onChange={(e) => {\r\n          methods.clearErrors(field);\r\n          methods.setValue(field, e.target.value);\r\n        }}\r\n      />\r\n      {error && <ErrorMessage message={error?.message} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nFormTextArea.propTypes = {\r\n  field: PropTypes.string,\r\n  validation: PropTypes.object,\r\n  placeholder: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default FormTextArea;\r\n","import React, { useMemo } from 'react';\r\nimport { Spin } from 'antd';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport { urlToList } from 'utils';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport Button from '../Button';\r\nimport PropTypes from 'prop-types';\r\nimport routes from 'routers';\r\nimport CheckAccess from 'navigation/CheckAccess';\r\nimport styled from 'styled-components';\r\n\r\nconst Footer = styled.div``;\r\n\r\nconst antIcon = (\r\n  <LoadingOutlined\r\n    style={{\r\n      fontSize: 24,\r\n    }}\r\n    spin\r\n  />\r\n);\r\n\r\nconst FormSection = ({\r\n  loading,\r\n  detailForm,\r\n  onSubmit,\r\n  disabled,\r\n  actions,\r\n  noActions,\r\n  noSideBar,\r\n  noPadding,\r\n  style,\r\n  customerClose,\r\n  enableEditButton = true,\r\n}) => {\r\n  const methods = useFormContext();\r\n  const {\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n  const { pathname } = useLocation();\r\n  // Find name function\r\n  const findNameFunctions = useMemo(() => pathname?.split('/')?.[1], [pathname]);\r\n  const PERMISSION = useMemo(() => {\r\n    const functionsRouteGroup = routes.filter((o) => o?.path.includes(`/${findNameFunctions}/`));\r\n    return {\r\n      edit: functionsRouteGroup?.find((o) => o?.path.includes('/edit'))?.function,\r\n      add: functionsRouteGroup?.find((o) => o?.path.includes('/add'))?.function,\r\n      detail: functionsRouteGroup?.find((o) => o?.path.includes('/detail'))?.function,\r\n    };\r\n  }, [findNameFunctions]);\r\n\r\n  const params = useParams();\r\n\r\n  const loadingForm = loading || isSubmitting;\r\n\r\n  const id = useMemo(() => {\r\n    return params[`${findNameFunctions}_id`] ?? params?.id ?? params[Object.keys(params).find((p) => p.includes('id'))];\r\n  }, [params, findNameFunctions]);\r\n\r\n  const isView = useMemo(() => pathname.includes('/detail') || pathname.includes('/view'), [pathname]);\r\n  const isAdd = useMemo(() => pathname.includes('/add'), [pathname]);\r\n  const isEdit = useMemo(() => pathname.includes('/edit'), [pathname]);\r\n  const history = useHistory();\r\n  const path = urlToList(useLocation().pathname)[0];\r\n\r\n  const goToPreviousPath = () => {\r\n    history.push(`${path}`);\r\n  };\r\n  const goToEditPath = (e) => {\r\n    e.preventDefault();\r\n    history.push(`${path}/edit/${id}`);\r\n  };\r\n\r\n  const jsx_footer = useMemo(() => {\r\n    if (noActions) {\r\n      return;\r\n    }\r\n\r\n    if (isView) {\r\n      return (\r\n        <>\r\n          {actions\r\n            ?.filter((p) => !p.hidden)\r\n            .map((props, i) => (\r\n              <Button className='mr-2' key={i} {...props} />\r\n            ))}\r\n          {/* <CheckAccess permission={PERMISSION?.edit}> */}\r\n          {enableEditButton && (\r\n            <button type='button' className='cb_btn_outline cb_btn_outline_success' onClick={goToEditPath}>\r\n              Chỉnh sửa\r\n            </button>\r\n          )}\r\n\r\n          {/* </CheckAccess> */}\r\n        </>\r\n      );\r\n    } else if (isAdd || isEdit) {\r\n      return (\r\n        <>\r\n          {actions\r\n            ?.filter((p) => !p.hidden)\r\n            .map((props, i) => (\r\n              <Button className='mr-2' key={i} {...props} />\r\n            ))}\r\n          {/* <CheckAccess permission={isEdit ? PERMISSION?.edit : PERMISSION?.add}> */}\r\n          <button type='submit' className='cb_btn cb_btn_success'>\r\n            <span className='ti-check'></span>Hoàn tất {isEdit ? 'chỉnh sửa' : 'thêm mới'}\r\n          </button>\r\n          {/* </CheckAccess> */}\r\n        </>\r\n      );\r\n    }\r\n  }, [isView, isEdit, isAdd, actions, noActions]);\r\n\r\n  const jsx_close = useMemo(() => {\r\n    if (!noActions) {\r\n      return (\r\n        <button type='button' className='cb_btn_outline' onClick={customerClose ?? goToPreviousPath}>\r\n          Đóng\r\n        </button>\r\n      );\r\n    }\r\n  }, [noActions]);\r\n\r\n  const parseDetailForm = useMemo(() => {\r\n    return (detailForm ?? []).filter((p) => !p.hidden) ?? [];\r\n  }, [detailForm]);\r\n\r\n  const jsx_main = (\r\n    <React.Fragment>\r\n      <div style={style} className='cb_main_wrapp'>\r\n        <div className='cb_row'>\r\n          {!noSideBar && (\r\n            <div className='cb_col_3'>\r\n              <ul className='cb_control_form'>\r\n                {parseDetailForm.map((p, key) => {\r\n                  let checkActive = false;\r\n                  if (Boolean(p?.fieldActive)) {\r\n                    for (let i of p?.fieldActive ?? []) {\r\n                      if (methods.watch(i) !== 0 && !Boolean(methods.watch(i))) {\r\n                        checkActive = false;\r\n                        break;\r\n                      }\r\n                      checkActive = true;\r\n                    }\r\n                  } else {\r\n                    checkActive = true;\r\n                  }\r\n                  return (\r\n                    <li\r\n                      onClick={() => {\r\n                        document.getElementById(key).scrollIntoView({\r\n                          block: 'start',\r\n                          behavior: 'smooth',\r\n                        });\r\n                      }}\r\n                      key={key}>\r\n                      <a className={checkActive ? 'cb_active' : ''}>\r\n                        <span className='ti-check'></span> {p?.title}\r\n                      </a>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          )}\r\n\r\n          <div className={`${noSideBar ? 'cb_col_12' : 'cb_col_9'} ${noPadding ? '' : 'cb_pb_6'}`}>\r\n            <Spin spinning={loadingForm} indicator={antIcon}>\r\n              <div className='cb_row'>\r\n                {parseDetailForm.map((p, key) => {\r\n                  const { title, id, component: Component, className, ...props } = p;\r\n                  return (\r\n                    <span key={key} id={key} className={className ?? 'cb_col_12'}>\r\n                      {Component && <Component id={id} title={title} disabled={disabled} {...props} />}\r\n                    </span>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Spin>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {!noActions && !isSubmitting && (\r\n        <Footer className='cb_btn_save cb_btn_group cb_flex cb_justify_content_right cb_align_items_center'>\r\n          {jsx_footer}\r\n          {jsx_close}\r\n        </Footer>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n\r\n  return noActions ? jsx_main : <form onSubmit={methods.handleSubmit(onSubmit)}>{jsx_main}</form>;\r\n};\r\n\r\nFormSection.propTypes = {\r\n  loading: PropTypes.bool,\r\n  detailForm: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      component: PropTypes.node,\r\n      fieldActive: PropTypes.arrayOf(PropTypes.string),\r\n    }),\r\n  ),\r\n  onSubmit: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  enableEditButton: PropTypes.bool,\r\n  noActions: PropTypes.bool,\r\n  actions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      className: PropTypes.string,\r\n      type: PropTypes.oneOf(['primary', 'danger', 'success', 'warning', 'blue', 'red', 'green']),\r\n      icon: PropTypes.string,\r\n      content: PropTypes.string,\r\n      disabled: PropTypes.bool,\r\n      onClick: PropTypes.func,\r\n      loading: PropTypes.bool,\r\n      outline: PropTypes.bool,\r\n    }),\r\n  ),\r\n};\r\n\r\nFormSection.defaultProps = {\r\n  loading: false,\r\n  detailForm: {},\r\n  onSubmit: () => {},\r\n  disabled: false,\r\n  noActions: false,\r\n  enableEditButton: true,\r\n};\r\n\r\nexport default FormSection;\r\n"],"names":["IconCollapse","styled","span","_templateObject","_taggedTemplateLiteral","props","open","_ref","style","title","children","id","_ref$isRequired","isRequired","componentCustom","_ref$defaultOpen","defaultOpen","_useState","useState","_useState2","_slicedToArray","setOpen","_jsx","React","className","_jsxs","concat","width","gap","onClick","DatePickerStyle","DatePicker","field","validation","placeholder","_ref$disabled","disabled","format","bordered","allowClear","_objectWithoutProperties","_excluded","methods","useFormContext","error","getFieldState","formState","register","_objectSpread","value","watch","dayjs","onChange","e","date","clearErrors","setValue","ErrorMessage","message","FormInput","_methods$watch","_ref$type","type","checked","Boolean","target","lineHeight","defaultProps","InputNumberStyled","InputNumber","_ref$bordered","formatter","val","replace","parser","controls","list","_ref$custom","custom","map","item","index","name","key","img","height","borderRadius","marginRight","border","src","alt","label","SelectStyle","Select","undefined","objectParse","FormSelect","_ref$list","loading","_ref$placeholder","_ref$mode","mode","_ref$allowClear","_ref$showSearch","showSearch","defaultValue","suffixIcon","LoadingOutlined","CaretDownOutlined","optionFilterProp","filterOption","input","option","_option$label","toLowerCase","includes","options","removeIcon","console","log","Array","isArray","rows","classNames","Footer","div","antIcon","fontSize","spin","FormSection","detailForm","onSubmit","actions","noActions","noSideBar","noPadding","customerClose","_ref$enableEditButton","enableEditButton","isSubmitting","pathname","useLocation","findNameFunctions","useMemo","_pathname$split","split","params","_functionsRouteGroup$","_functionsRouteGroup$2","_functionsRouteGroup$3","functionsRouteGroup","routes","filter","o","path","edit","find","function","add","detail","useParams","loadingForm","_ref2","_params","Object","keys","p","isView","isAdd","isEdit","history","useHistory","urlToList","goToPreviousPath","push","goToEditPath","preventDefault","jsx_footer","_Fragment","hidden","i","Button","jsx_close","parseDetailForm","_filter","jsx_main","checkActive","fieldActive","_p$fieldActive","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","document","getElementById","scrollIntoView","block","behavior","Spin","spinning","indicator","Component","component","handleSubmit"],"sourceRoot":""}
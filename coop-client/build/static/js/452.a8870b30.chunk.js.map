{"version":3,"file":"static/js/452.a8870b30.chunk.js","mappings":"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","sources":["pages/TransactionRoom/utils/constants.js","pages/TransactionRoom/components/Filter.jsx","pages/TransactionRoom/components/Table.jsx","pages/TransactionRoom/pages/DefaultPage.jsx","services/branch.service.js","services/transaction-room.service.js"],"sourcesContent":["export const DefaultFilter = {\r\n  search: '',\r\n  created_date_from: null,\r\n  created_date_to: null,\r\n};\r\n\r\nexport const Permission = {\r\n  ADD: 'BRANCH_ADD',\r\n  EDIT: 'BRANCH_EDIT',\r\n  VIEW: 'BRANCH_VIEW',\r\n  DELETE: 'BRANCH_DEL',\r\n};\r\n","import React from 'react';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\n\r\nimport FilterSearchBar from 'components/shared/FilterSearchBar/index';\r\nimport FormInput from 'components/shared/FormControl/FormInput';\r\nimport FormDateRange from 'components/shared/FormControl/FormDateRange';\r\nimport { DefaultFilter } from '../utils/constants';\r\n\r\nconst AccountingPeriodFilter = ({ onChange }) => {\r\n  const methods = useForm(DefaultFilter);\r\n\r\n  const onClear = () => {\r\n    methods.reset(DefaultFilter);\r\n    onChange(DefaultFilter);\r\n  };\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <FilterSearchBar\r\n        title='Tìm kiếm'\r\n        onSubmit={(v) => {\r\n          v.search = v.search?.trim();\r\n          onChange(v);\r\n        }}\r\n        colSize={4}\r\n        onClear={() => onClear()}\r\n        actions={[\r\n          {\r\n            title: 'Từ khóa',\r\n            component: (\r\n              <FormInput field='search' placeholder='Nhập tên phòng giao dịch, số điện thoại' maxLength={250} />\r\n            ),\r\n          },\r\n          {\r\n            title: 'Ngày tạo',\r\n            component: (\r\n              <FormDateRange\r\n                allowClear={true}\r\n                fieldStart={'created_date_from'}\r\n                fieldEnd={'created_date_to'}\r\n                placeholder={['Từ ngày', 'Đến ngày']}\r\n                format={'DD/MM/YYYY'}\r\n              />\r\n            ),\r\n          },\r\n        ]}\r\n      />\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default AccountingPeriodFilter;\r\n","import React, { useCallback } from 'react';\r\nimport { useMemo } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { showConfirmModal } from 'actions/global';\r\nimport { deleteBranch } from 'services/branch.service';\r\nimport DataTable from 'components/shared/DataTable/index';\r\nimport { Tooltip } from 'antd';\r\n\r\nconst AccountingPeriodTable = ({\r\n  loading,\r\n  data,\r\n  totalPages,\r\n  itemsPerPage,\r\n  page,\r\n  totalItems,\r\n  onChangePage,\r\n  onRefresh,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        header: 'STT',\r\n        classNameHeader: 'cb_text_center',\r\n        classNameBody: 'cb_text_center',\r\n        formatter: (_, index) => <span className='cb_text_wrap'>{index + 1}</span>,\r\n      },\r\n      {\r\n        header: 'Tên phòng giao dịch',\r\n        classNameHeader: 'cb_text_center',\r\n        accessor: 'transaction_room_name',\r\n      },\r\n      {\r\n        header: 'Địa chỉ',\r\n        classNameHeader: 'cb_text_center',\r\n        accessor: 'address',\r\n      },\r\n      {\r\n        header: 'Số điện thoại',\r\n        classNameHeader: 'cb_text_center',\r\n        classNameBody: 'cb_text_center',\r\n        formatter: (item, index) => (\r\n          <span>{`${item.phone_number_main ?? ''} ${item.phone_number_sub ? `- ${item.phone_number_sub}` : ''}`}</span>\r\n        ),\r\n      },\r\n      {\r\n        header: 'Người tạo',\r\n        classNameHeader: 'cb_text_center',\r\n        classNameBody: 'cb_text_center',\r\n        formatter: (item, index) => (\r\n          <Tooltip placement='right' title={`Mã nhân viên: ${item.created_username}`}>\r\n            <span>{item.created_fullname}</span>\r\n          </Tooltip>\r\n        ),\r\n      },\r\n      {\r\n        header: 'Ngày tạo',\r\n        accessor: 'created_at',\r\n        classNameHeader: 'cb_text_center',\r\n        classNameBody: 'cb_text_center',\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const handleDelete = useCallback(\r\n    async (branchId) => {\r\n      await deleteBranch(branchId);\r\n      onRefresh();\r\n    },\r\n    [onRefresh],\r\n  );\r\n\r\n  const actions = useMemo(() => {\r\n    return [\r\n      {\r\n        globalAction: true,\r\n        icon: 'ti-plus',\r\n        type: 'success',\r\n        content: 'Thêm mới',\r\n        onClick: () => window._$g.rdr(`/transaction-room/add`),\r\n      },\r\n      {\r\n        icon: 'ti-write',\r\n        color: 'blue',\r\n        title: 'Sửa',\r\n        onClick: (p) => {\r\n          window._$g.rdr(`/transaction-room/edit/${p?.transaction_room_id}`);\r\n        },\r\n      },\r\n      {\r\n        icon: 'ti-eye',\r\n        color: 'green',\r\n        title: 'Chi tiết',\r\n        onClick: (p) => {\r\n          window._$g.rdr(`/transaction-room/detail/${p?.transaction_room_id}`);\r\n        },\r\n      },\r\n      {\r\n        icon: 'fi ti-trash',\r\n        color: 'red',\r\n        title: 'Xóa',\r\n        onClick: (_, d) =>\r\n          dispatch(\r\n            showConfirmModal(['Bạn có thực sự muốn xóa?', 'Bạn sẽ mất dữ liệu này và các dữ liệu liên quan.'], () =>\r\n              handleDelete([_.transaction_room_id]),\r\n            ),\r\n          ),\r\n      },\r\n    ];\r\n  }, [dispatch, handleDelete]);\r\n\r\n  return (\r\n    <DataTable\r\n      loading={loading}\r\n      columns={columns}\r\n      data={data}\r\n      actions={actions}\r\n      totalPages={totalPages}\r\n      itemsPerPage={itemsPerPage}\r\n      page={page}\r\n      totalItems={totalItems}\r\n      onChangePage={onChangePage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AccountingPeriodTable;\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useCallback } from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport Filter from '../components/Filter';\r\nimport Table from '../components/Table';\r\nimport { getList } from 'services/transaction-room.service';\r\nimport { defaultPaging, defaultParams } from 'utils/helpers';\r\n\r\nconst ListPage = () => {\r\n  const [params, setParams] = useState(defaultParams);\r\n  const [dataList, setDataList] = useState(defaultPaging);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const { items, itemsPerPage, page, totalItems, totalPages } = dataList;\r\n\r\n  const getData = useCallback(() => {\r\n    setLoading(true);\r\n    getList(params)\r\n      .then(setDataList)\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [params]);\r\n\r\n  useEffect(getData, [getData]);\r\n\r\n  return (\r\n    <div class='cb_main_wrapp'>\r\n      <Filter\r\n        onChange={(e) => {\r\n          setParams((prev) => {\r\n            return {\r\n              ...prev,\r\n              ...e,\r\n            };\r\n          });\r\n        }}\r\n      />\r\n      <Table\r\n        onChangePage={(page) => {\r\n          setParams({\r\n            ...params,\r\n            page,\r\n          });\r\n        }}\r\n        data={items}\r\n        totalPages={totalPages}\r\n        itemsPerPage={itemsPerPage}\r\n        page={page}\r\n        totalItems={totalItems}\r\n        loading={loading}\r\n        onRefresh={getData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListPage;\r\n","import httpClient from 'utils/httpClient';\r\n\r\nconst path = '/branch';\r\n\r\nexport const getList = (params = {}) => {\r\n  return httpClient.get(path, { params });\r\n};\r\n\r\nexport const getById = (id) => {\r\n  return httpClient.get(`${path}/${id}`);\r\n};\r\nexport const create = (params) => {\r\n  return httpClient.post(path, params);\r\n};\r\n\r\nexport const update = (params) => {\r\n  return httpClient.patch(path, params);\r\n};\r\n\r\nexport const deleteBranch = (id) => {\r\n  return httpClient.delete(`${path}/${id}`);\r\n};\r\n\r\nexport const getOptions = (params = {}) => {\r\n  return httpClient.get(path + '/options', { params });\r\n};\r\n","import httpClient from 'utils/httpClient';\r\n\r\nconst path = '/transaction-room';\r\n\r\nexport const getList = (params = {}) => {\r\n  return httpClient.get(path, { params });\r\n};\r\n\r\nexport const getById = (id) => {\r\n  return httpClient.get(`${path}/${id}`);\r\n};\r\nexport const create = (params) => {\r\n  return httpClient.post(path, params);\r\n};\r\n\r\nexport const update = (params) => {\r\n  return httpClient.patch(path, params);\r\n};\r\n\r\nexport const deleteBranch = (id) => {\r\n  return httpClient.delete(`${path}/${id}`);\r\n};\r\n\r\nexport const getOptions = (params = {}) => {\r\n  return httpClient.get(path + '/options', { params });\r\n};\r\n"],"names":["DefaultFilter","search","created_date_from","created_date_to","_ref","onChange","methods","useForm","_jsx","FormProvider","_objectSpread","children","FilterSearchBar","title","onSubmit","v","_v$search","trim","colSize","onClear","reset","actions","component","FormInput","field","placeholder","maxLength","FormDateRange","allowClear","fieldStart","fieldEnd","format","_ref2","loading","data","totalPages","itemsPerPage","page","totalItems","onChangePage","onRefresh","dispatch","useDispatch","columns","useMemo","header","classNameHeader","classNameBody","formatter","_","index","className","accessor","item","_item$phone_number_ma","concat","phone_number_main","phone_number_sub","Tooltip","placement","created_username","created_fullname","handleDelete","useCallback","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","branchId","wrap","_context","prev","next","deleteBranch","stop","apply","arguments","globalAction","icon","type","content","onClick","window","_$g","rdr","color","p","transaction_room_id","d","showConfirmModal","DataTable","_useState","useState","defaultParams","_useState2","_slicedToArray","params","setParams","_useState3","defaultPaging","_useState4","dataList","setDataList","_useState5","_useState6","setLoading","items","getData","getList","then","finally","useEffect","_jsxs","class","Filter","e","Table","path","length","undefined","httpClient","get","getById","id","create","post","update","patch","delete","getOptions"],"sourceRoot":""}